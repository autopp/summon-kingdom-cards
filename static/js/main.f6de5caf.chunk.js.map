{"version":3,"sources":["cardList.js","App.js","serviceWorker.js","index.js"],"names":["kingdomList","basic","name","bane","intrigue","seaside","alchemy","prosperity","cornucopia","hinterlands","dark_ages","guild","adventures","empires","eventList","landmarkList","nameMap","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeNumberOfSupplies","e","setState","numberOfSupplies","parseInt","target","value","onChangeKingdom","kingdom","assign","state","onChangeEvent","event","onChangeLandmark","landmark","onGenerate","_","errors","validateForGenerate","length","supplies","i","selectSupplies","values","reduce","acc","x","push","entries","forEach","kv","_kv","slicedToArray","concat","_this2","events","landmarks","rest","baneNeeded","_kv2","num","cards","shuffleArray","slice","undefined","find","card","apply","toConsumableArray","ary","copied","j","Math","floor","random","_ref","messages","map","error","react_default","a","createElement","key","className","supply","keys","ex","join","landscapes","type","min","max","step","onChange","onClick","id","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f6de5caf.chunk.js","sourcesContent":["export const kingdomList = {\n  basic: [\n    { name: \"冒険者\", bane: false },\n    { name: \"役人\", bane: false },\n    { name: \"地下貯蔵庫\", bane: true },\n    { name: \"礼拝堂\", bane: true },\n    { name: \"議事堂\", bane: false },\n    { name: \"祝祭\", bane: false },\n    { name: \"庭園\", bane: false },\n    { name: \"研究所\", bane: false },\n    { name: \"書庫\", bane: false },\n    { name: \"市場\", bane: false },\n    { name: \"民兵\", bane: false },\n    { name: \"鉱山\", bane: false },\n    { name: \"堀\", bane: true },\n    { name: \"金貸し\", bane: false },\n    { name: \"改築\", bane: false },\n    { name: \"鍛冶屋\", bane: false },\n    { name: \"玉座の間\", bane: false },\n    { name: \"村\", bane: true },\n    { name: \"魔女\", bane: false },\n    { name: \"工房\", bane: true },\n    { name: \"職人\", bane: false },\n    { name: \"山賊\", bane: false },\n    { name: \"前駆者\", bane: true },\n    { name: \"商人\", bane: true },\n    { name: \"密猟者\", bane: false },\n    { name: \"衛兵\", bane: false },\n    { name: \"家臣\", bane: true }\n  ],\n  intrigue: [\n    { name: \"男爵\", bane: false },\n    { name: \"橋\", bane: false },\n    { name: \"共謀者\", bane: false },\n    { name: \"銅細工師\", bane: false },\n    { name: \"中庭\", bane: true },\n    { name: \"公爵\", bane: false },\n    { name: \"大広間\", bane: true },\n    { name: \"ハーレム\", bane: false },\n    { name: \"鉄工所\", bane: false },\n    { name: \"仮面舞踏会\", bane: true },\n    { name: \"鉱山の村\", bane: false },\n    { name: \"寵臣\", bane: false },\n    { name: \"貴族\", bane: false },\n    { name: \"手先\", bane: true },\n    { name: \"破壊工作員\", bane: false },\n    { name: \"偵察員\", bane: false },\n    { name: \"秘密の部屋\", bane: true },\n    { name: \"貧民街\", bane: true },\n    { name: \"執事\", bane: true },\n    { name: \"詐欺師\", bane: true },\n    { name: \"拷問人\", bane: false },\n    { name: \"交易場\", bane: false },\n    { name: \"貢物\", bane: false },\n    { name: \"改良\", bane: false },\n    { name: \"願いの井戸\", bane: true }\n  ],\n  seaside: [\n    { name: \"原住民の村\", bane: true },\n    { name: \"停泊所\", bane: true },\n    { name: \"抑留\", bane: true },\n    { name: \"真珠採り\", bane: true },\n    { name: \"灯台\", bane: true },\n    { name: \"漁村\", bane: true },\n    { name: \"倉庫\", bane: true },\n    { name: \"見張り\", bane: true },\n    { name: \"密輸人\", bane: true },\n    { name: \"大使\", bane: true },\n    { name: \"引揚水夫\", bane: false },\n    { name: \"宝の地図\", bane: false },\n    { name: \"海の妖婆\", bane: false },\n    { name: \"巾着切り\", bane: false },\n    { name: \"隊商\", bane: false },\n    { name: \"島\", bane: false },\n    { name: \"航海士\", bane: false },\n    { name: \"海賊船\", bane: false },\n    { name: \"前哨地\", bane: false },\n    { name: \"商船\", bane: false },\n    { name: \"策士\", bane: false },\n    { name: \"宝物庫\", bane: false },\n    { name: \"探検家\", bane: false },\n    { name: \"船着場\", bane: false },\n    { name: \"バザー\", bane: false },\n    { name: \"幽霊船\", bane: false }\n  ],\n  alchemy: [\n    { name: \"薬草商\", bane: true },\n    { name: \"薬師\", bane: false },\n    { name: \"大学\", bane: false },\n    { name: \"念視の泉\", bane: false },\n    { name: \"錬金術師\", bane: false },\n    { name: \"使い魔\", bane: false },\n    { name: \"賢者の石\", bane: false },\n    { name: \"ゴーレム\", bane: false },\n    { name: \"弟子\", bane: false },\n    { name: \"支配\", bane: false },\n    { name: \"ブドウ園\", bane: false },\n    { name: \"変成\", bane: false }\n  ],\n  prosperity: [\n    { name: \"借金\", bane: true },\n    { name: \"望楼\", bane: true },\n    { name: \"交易路\", bane: true },\n    { name: \"護符\", bane: false },\n    { name: \"記念碑\", bane: false },\n    { name: \"石切場\", bane: false },\n    { name: \"司教\", bane: false },\n    { name: \"労働者の村\", bane: false },\n    { name: \"都市\", bane: false },\n    { name: \"会計所\", bane: false },\n    { name: \"香具師\", bane: false },\n    { name: \"保管庫\", bane: false },\n    { name: \"禁制品\", bane: false },\n    { name: \"造幣所\", bane: false },\n    { name: \"玉璽\", bane: false },\n    { name: \"大衆\", bane: false },\n    { name: \"投機\", bane: false },\n    { name: \"隠し財産\", bane: false },\n    { name: \"大市場\", bane: false },\n    { name: \"ならず者\", bane: false },\n    { name: \"拡張\", bane: false },\n    { name: \"鍛造\", bane: false },\n    { name: \"宮廷\", bane: false },\n    { name: \"銀行\", bane: false },\n    { name: \"行商人\", bane: false }\n  ],\n  cornucopia: [\n    { name: \"村落\", bane: true },\n    { name: \"占い師\", bane: true },\n    { name: \"移動動物園\", bane: true },\n    { name: \"馬上槍試合\", bane: false },\n    { name: \"再建\", bane: false },\n    { name: \"農村\", bane: false },\n    { name: \"馬商人\", bane: false },\n    { name: \"魔女娘\", bane: false },\n    { name: \"狩猟団\", bane: false },\n    { name: \"収穫\", bane: false },\n    { name: \"豊穣の角笛\", bane: false },\n    { name: \"道化師\", bane: false },\n    { name: \"品評会\", bane: false }\n  ],\n  hinterlands: [\n    { name: \"愚者の黄金\", bane: true },\n    { name: \"岐路\", bane: true },\n    { name: \"公爵夫人\", bane: true },\n    { name: \"坑道\", bane: true },\n    { name: \"神託\", bane: true },\n    { name: \"開発\", bane: true },\n    { name: \"画策\", bane: true },\n    { name: \"オアシス\", bane: true },\n    { name: \"義賊\", bane: false },\n    { name: \"遊牧民の野営地\", bane: false },\n    { name: \"よろずや\", bane: false },\n    { name: \"交易人\", bane: false },\n    { name: \"シルクロード\", bane: false },\n    { name: \"香辛料商人\", bane: false },\n    { name: \"不正利得\", bane: false },\n    { name: \"官吏\", bane: false },\n    { name: \"大使館\", bane: false },\n    { name: \"宿屋\", bane: false },\n    { name: \"地図職人\", bane: false },\n    { name: \"埋蔵金\", bane: false },\n    { name: \"街道\", bane: false },\n    { name: \"辺境伯\", bane: false },\n    { name: \"厩舎\", bane: false },\n    { name: \"値切り屋\", bane: false },\n    { name: \"国境の村\", bane: false },\n    { name: \"農地\", bane: false }\n  ],\n  dark_ages: [\n    { name: \"救貧院\", bane: false },\n    { name: \"従者\", bane: true },\n    { name: \"物乞い\", bane: true },\n    { name: \"浮浪者\", bane: true },\n    { name: \"青空市場\", bane: true },\n    { name: \"浮浪児\", bane: true },\n    { name: \"物置\", bane: true },\n    { name: \"隠遁者\", bane: true },\n    { name: \"賢者\", bane: true },\n    { name: \"採集者\", bane: true },\n    { name: \"城塞\", bane: false },\n    { name: \"吟遊詩人\", bane: false },\n    { name: \"死の荷車\", bane: false },\n    { name: \"襲撃者\", bane: false },\n    { name: \"封土\", bane: false },\n    { name: \"武器庫\", bane: false },\n    { name: \"金物商\", bane: false },\n    { name: \"行進\", bane: false },\n    { name: \"ネズミ\", bane: false },\n    { name: \"ゴミあさり\", bane: false },\n    { name: \"墓暴き\", bane: false },\n    { name: \"屑屋\", bane: false },\n    { name: \"山賊の宿営地\", bane: false },\n    { name: \"狂信者\", bane: false },\n    { name: \"略奪\", bane: false },\n    { name: \"地下墓所\", bane: false },\n    { name: \"騎士\", bane: false },\n    { name: \"建て直し\", bane: false },\n    { name: \"はみだし者\", bane: false },\n    { name: \"盗賊\", bane: false },\n    { name: \"偽造通貨\", bane: false },\n    { name: \"秘術師\", bane: false },\n    { name: \"伯爵\", bane: false },\n    { name: \"狩場\", bane: false },\n    { name: \"祭壇\", bane: false }\n  ],\n  guild: [\n    { name: \"蝋燭職人\", bane: true },\n    { name: \"医者\", bane: true },\n    { name: \"名品\", bane: true },\n    { name: \"広場\", bane: false },\n    { name: \"助言者\", bane: false },\n    { name: \"伝令官\", bane: false },\n    { name: \"商人ギルド\", bane: false },\n    { name: \"パン屋\", bane: false },\n    { name: \"肉屋\", bane: false },\n    { name: \"熟練工\", bane: false },\n    { name: \"予言者\", bane: false },\n    { name: \"石工\", bane: true },\n    { name: \"収税吏\", bane: false }\n  ],\n  adventures: [\n    { name: \"法貨\", bane: true },\n    { name: \"農民\", bane: true },\n    { name: \"騎士見習い\", bane: true },\n    { name: \"鼠取り\", bane: true },\n    { name: \"倒壊\", bane: true },\n    { name: \"道具\", bane: true },\n    { name: \"魔除け\", bane: true },\n    { name: \"隊商の護衛\", bane: true },\n    { name: \"地下牢\", bane: true },\n    { name: \"案内人\", bane: true },\n    { name: \"港町\", bane: false },\n    { name: \"山守\", bane: false },\n    { name: \"変容\", bane: false },\n    { name: \"守銭奴\", bane: false },\n    { name: \"複製\", bane: false },\n    { name: \"カササギ\", bane: false },\n    { name: \"使者\", bane: false },\n    { name: \"語り部\", bane: false },\n    { name: \"掘出物\", bane: false },\n    { name: \"ワイン商\", bane: false },\n    { name: \"橋の下のトロル\", bane: false },\n    { name: \"沼の妖婆\", bane: false },\n    { name: \"呪いの森\", bane: false },\n    { name: \"工匠\", bane: false },\n    { name: \"遠隔地\", bane: false },\n    { name: \"御料車\", bane: false },\n    { name: \"失われし都市\", bane: false },\n    { name: \"巨人\", bane: false },\n    { name: \"遺物\", bane: false },\n    { name: \"雇人\", bane: false }\n  ],\n  empires: [\n    { name: \"大君主\", bane: false },\n    { name: \"技術者\", bane: false },\n    { name: \"王室の鍛冶屋\", bane: false },\n    { name: \"市街\", bane: false },\n    { name: \"パトリキ/エンポリウム\", bane: true },\n    { name: \"陣地/鹵獲品\", bane: true },\n    { name: \"開拓者/騒がしい村\", bane: true },\n    { name: \"投石機/石\", bane: true },\n    { name: \"女魔術師\", bane: true },\n    { name: \"剣闘士/大金\", bane: true },\n    { name: \"城\", bane: true },\n    { name: \"戦車競走\", bane: true },\n    { name: \"農家の市場\", bane: true },\n    { name: \"ヴィラ\", bane: false },\n    { name: \"生贄\", bane: false },\n    { name: \"神殿\", bane: false },\n    { name: \"ワイルドハント\", bane: false },\n    { name: \"冠\", bane: false },\n    { name: \"公共広場\", bane: false },\n    { name: \"軍団兵\", bane: false },\n    { name: \"元手\", bane: false },\n    { name: \"御守り\", bane: false },\n    { name: \"資料庫\", bane: false },\n    { name: \"庭師\", bane: false }\n  ]\n};\n\nexport const eventList = [\n  { name: \"施し\" },\n  { name: \"舞踏会\" },\n  { name: \"焚火\" },\n  { name: \"借入\" },\n  { name: \"探検\" },\n  { name: \"渡し船\" },\n  { name: \"相続\" },\n  { name: \"失われた技術\" },\n  { name: \"使節団\" },\n  { name: \"誘導\" },\n  { name: \"巡礼\" },\n  { name: \"立案\" },\n  { name: \"探索\" },\n  { name: \"奇襲\" },\n  { name: \"保存\" },\n  { name: \"偵察隊\" },\n  { name: \"海路\" },\n  { name: \"交易\" },\n  { name: \"鍛錬\" },\n  { name: \"移動遊園地\" },\n  { name: \"昇進\" },\n  { name: \"併合\" },\n  { name: \"宴会\" },\n  { name: \"征服\" },\n  { name: \"掘進\" },\n  { name: \"制圧\" },\n  { name: \"寄付\" },\n  { name: \"儀式\" },\n  { name: \"大地への塩まき\" },\n  { name: \"徴税\" },\n  { name: \"凱旋\" },\n  { name: \"結婚式\" },\n  { name: \"意外な授かり物\" }\n];\n\nexport const landmarkList = [\n  { name: \"水道橋\" },\n  { name: \"闘技場\" },\n  { name: \"山賊の砦\" },\n  { name: \"公会堂\" },\n  { name: \"浴場\" },\n  { name: \"戦場\" },\n  { name: \"列柱\" },\n  { name: \"汚された神殿\" },\n  { name: \"噴水\" },\n  { name: \"砦\" },\n  { name: \"迷宮\" },\n  { name: \"峠\" },\n  { name: \"博物館\" },\n  { name: \"オベリスク\" },\n  { name: \"果樹園\" },\n  { name: \"宮殿\" },\n  { name: \"墓標\" },\n  { name: \"塔\" },\n  { name: \"凱旋門\" },\n  { name: \"壁\" },\n  { name: \"狼の巣\" }\n];\n\nexport const nameMap = {\n  basic: \"基本\", intrigue: \"陰謀\", seaside: \"海辺\", alchemy: \"錬金術\", prosperity: \"繁栄\", cornucopia: \"収穫祭\",\n  hinterlands: \"異郷\", dark_ages: \"暗黒時代\", guild: \"ギルド\", adventures: \"冒険\", empires: \"帝国\"\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { kingdomList, eventList, landmarkList, nameMap } from './cardList.js'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberOfSupplies: 1,\n      kingdom: {\n        basic: 0, intrigue: 0, seaside: 0, alchemy: 0, prosperity: 0,\n        cornucopia: 0, hinterlands: 0, dark_ages: 0, guild: 0, adventures: 0, empires: 0\n      },\n      event: 0, landmark: 0, supplies: [], errors: []\n    };\n  }\n\n  onChangeNumberOfSupplies = e => {\n    this.setState({ numberOfSupplies: parseInt(e.target.value, 10) });\n  }\n\n  onChangeKingdom = (name) => {\n    return e => {\n      let kingdom = Object.assign({}, this.state.kingdom);\n      kingdom[name] = parseInt(e.target.value, 10);\n      this.setState({ kingdom: kingdom });\n    };\n  }\n\n  onChangeEvent = e => {\n    this.setState({ event: parseInt(e.target.value, 10) });\n  }\n\n  onChangeLandmark = e => {\n    this.setState({ landmark: parseInt(e.target.value, 10) });\n  }\n\n  onGenerate = _ => {\n    // validate state\n    let errors = this.validateForGenerate();\n    if (errors.length !== 0) {\n      this.setState({ errors: errors });\n      return;\n    }\n\n    let supplies = null;\n    let maxTry = 100;\n\n    for (let i = 0; i < maxTry; i++) {\n      supplies = this.selectSupplies();\n      if (supplies !== null) {\n        break;\n      }\n    }\n\n    if (supplies === null) {\n      this.setState({ errors: [\"災いカードの選出に失敗しました\"] });\n      return;\n    }\n    this.setState({ supplies: supplies, errors : []});\n  }\n\n  validateForGenerate() {\n    let errors = [];\n    let kingdom = this.state.kingdom;\n    let numberOfSupplies = this.state.numberOfSupplies;\n\n    if (Object.values(kingdom).reduce((acc, x) => acc + x) !== 10) {\n      errors.push(\"王国カードの数が10ではありません\");\n    }\n\n    Object.entries(kingdom).forEach(kv => {\n      let [name, num] = kv;\n\n      if (num * numberOfSupplies > kingdomList[name].length) {\n        errors.push(`${nameMap[name]}のカード枚数が足りません`)\n      }\n    })\n\n    if (this.state.event * numberOfSupplies > eventList.length) {\n      errors.push(\"イベントの枚数が足りません\");\n    }\n\n    if (this.state.landmark * numberOfSupplies > landmarkList.length) {\n      errors.push(\"ランドマークの枚数が足りません\");\n    }\n\n    return errors;\n  }\n\n  selectSupplies() {\n    let supplies = [];\n    let numberOfSupplies = this.state.numberOfSupplies\n\n    for (let i = 0; i < numberOfSupplies; i++) {\n      supplies.push({ kingdom: {}, events: [], landmarks: [] });\n    }\n\n    let rest = [];\n    let baneNeeded = -1;\n    Object.entries(this.state.kingdom).forEach(kv => {\n      let [name, num] = kv;\n\n      if (num < 1) {\n        return;\n      }\n\n      let cards = this.shuffleArray(kingdomList[name]);\n      for (let i = 0; i < numberOfSupplies; i++) {\n        supplies[i].kingdom[name] = cards.slice(i * num, (i + 1) * num);\n        if (name === \"cornucopia\" && supplies[i].kingdom[name].find(card => card.name === \"魔女娘\") !== undefined) {\n          baneNeeded = i;\n        }\n      }\n\n      rest.push(...cards.slice(numberOfSupplies * num));\n    });\n\n    if (baneNeeded >= 0) {\n      let bane = this.shuffleArray(rest).find(card => card.bane);\n\n      if (bane === undefined) {\n        return null;\n      }\n\n      supplies[baneNeeded].bane = bane;\n    }\n\n    let event = this.state.event;\n    if (event >= 1) {\n      let events = this.shuffleArray(eventList);\n      for (let i = 0; i < numberOfSupplies; i++) {\n        supplies[i].events = events.slice(i * event, (i + 1) * event);\n      }\n    }\n\n    let landmark = this.state.landmark;\n    if (landmark >= 1) {\n      let landmarks = this.shuffleArray(landmarkList);\n      for (let i = 0; i < numberOfSupplies; i++) {\n        supplies[i].landmarks = landmarks.slice(i * landmark, (i + 1) * landmark);\n      }\n    }\n\n    return supplies;\n  }\n\n  shuffleArray(ary) {\n    let copied = ary.slice();\n    for (let i = copied.length - 1; i>= 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [copied[i], copied[j]] = [copied[j], copied[i]];\n    }\n    return copied;\n  }\n\n  render() {\n    let errors = '';\n    if (this.state.errors.length !== 0) {\n      let messages = this.state.errors.map((error, i) => <div key={i}>{error}</div>)\n      errors = <div className=\"alert alert-danger\">\n        {messages}\n      </div>;\n    }\n    let supplies = this.state.supplies.map((supply, i) => {\n      let cards = Object.keys(supply.kingdom).map(ex => supply.kingdom[ex].map(card => card.name).join(' ')).join(' ');\n      let bane = typeof supply.bane === 'object' ? `災い: ${supply.bane.name}` : '';\n      let landscapes = supply.events.concat(supply.landmarks).map(card => card.name).join(' ')\n\n      return (\n        <div className=\"panel panel-default\" key={i}>\n          <div className=\"panel-body\">\n            <div>{cards}</div>\n            <div>{landscapes}</div>\n            <div>{bane}</div>\n          </div>\n        </div>\n      )\n    })\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h1>Summon Kingdom Cards</h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h2>王国カード</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>基本:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.basic} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"basic\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>陰謀:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.intrigue} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"intrigue\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>海辺:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.seaside} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"seaside\")} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>錬金術:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.alchemy} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"alchemy\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>繁栄:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.prosperity} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"prosperity\")} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>収穫祭:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.cornucopia} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"cornucopia\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>異郷:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.hinterlands} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"hinterlands\")} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>暗黒時代:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.dark_ages} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"dark_ages\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>ギルド:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.guild} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"guild\")} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>冒険:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.adventures} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"adventures\")} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>帝国:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.kingdom.empires} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeKingdom(\"empires\")} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h2>イベント・ランドマーク</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>イベント:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.event} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeEvent} />\n          </div>\n          <div className=\"col-lg-2\">\n            <div>ランドマーク:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.landmark} min=\"0\" max=\"10\" step=\"1\" onChange={this.onChangeLandmark} />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h2>サプライ</h2>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-2\">\n            <div>数:</div>\n          </div>\n          <div className=\"col-lg-2\">\n            <input type=\"number\" value={this.state.numberOfSupplies} min=\"1\" max=\"10\" step=\"1\" onChange={this.onChangeNumberOfSupplies} />\n          </div>\n          <div className=\"col-lg-2\">\n            <button type=\"button\" className=\"btn btn-info btn\" onClick={this.onGenerate}>生成</button>\n          </div>\n        </div>\n        <div className=\"row\" id=\"errors\">\n          <div className=\"col-lg-12\">\n            {errors}\n          </div>\n        </div>\n        <div className=\"row\" id=\"supplies\">\n          <div className=\"col-lg-12\">\n            {supplies}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}